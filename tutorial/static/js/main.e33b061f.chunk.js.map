{"version":3,"sources":["ActionArea.js","ImageSlide.js","Pagelist.js","Tutorial.js","App.js","reportWebVitals.js","index.js"],"names":["ActionArea","handlechange","transitionToggle","value","useState","pageID","id","setId","extractedDiv","setExtractedDiv","test","div","onClick","style","width","height","margin","border","borderRadius","lineHeight","useEffect","console","log","nextPageID","find","x","idx","array","className","background","ImageSlide","sliderArea","ref","dots","infinite","speed","slidesToShow","slidesToScroll","src","pagesList","title","body","success","Tutorial","history","location","num","setNum","percent","setPercent","alert","congraturation","setTransitionToggle","pages","query","qs","parse","search","ignoreQueryPrefix","userType","type","page","e","undefined","forEach","push","bgImage","fn","pageNum","showPageNum","maxPageNum","length","setValue","useRef","nextButton","firework","setTimeout","current","innerText","chkNewUser","newUser","document","href","slickNext","backgroundColor","transform","transition","split","map","line","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e33b061f.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst ActionArea = ({ handlechange, transitionToggle, value }) => {\r\n    const [id, setId] = useState(value.pageID);\r\n    const [extractedDiv, setExtractedDiv] = useState(\"\");\r\n\r\n    const test = [\r\n        {\r\n            id: 1,\r\n            div: (\r\n                <div\r\n                    onClick={handlechange}\r\n                    test=\"qq\"\r\n                    value=\"tt\"\r\n                    style={{ width: \"calc(100% - 40px)\", height: \"48px\", margin: \"10px 20px\", border: \"1px solid #333\", borderRadius: \"4px\", lineHeight: \"48px\" }}\r\n                >\r\n                    테스트1\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            id: 2,\r\n            div: (\r\n                <div\r\n                    onClick={handlechange}\r\n                    test=\"qq\"\r\n                    value=\"tt\"\r\n                    style={{ width: \"calc(100% - 40px)\", height: \"48px\", margin: \"10px 20px\", border: \"1px solid #333\", borderRadius: \"4px\", lineHeight: \"48px\" }}\r\n                >\r\n                    테스트2\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            id: 3,\r\n            div: (\r\n                <div\r\n                    onClick={handlechange}\r\n                    test=\"qq\"\r\n                    value=\"tt\"\r\n                    style={{ width: \"calc(100% - 40px)\", height: \"48px\", margin: \"10px 20px\", border: \"1px solid #333\", borderRadius: \"4px\", lineHeight: \"48px\" }}\r\n                >\r\n                    테스트3\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            id: 4,\r\n            div: (\r\n                <div\r\n                    onClick={handlechange}\r\n                    test=\"qq\"\r\n                    value=\"tt\"\r\n                    style={{ width: \"calc(100% - 40px)\", height: \"48px\", margin: \"10px 20px\", border: \"1px solid #333\", borderRadius: \"4px\", lineHeight: \"48px\" }}\r\n                >\r\n                    테스트4\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            id: 5,\r\n            div: (\r\n                <div\r\n                    onClick={handlechange}\r\n                    test=\"qq\"\r\n                    value=\"tt\"\r\n                    style={{ width: \"calc(100% - 40px)\", height: \"48px\", margin: \"10px 20px\", border: \"1px solid #333\", borderRadius: \"4px\", lineHeight: \"48px\" }}\r\n                >\r\n                    테스트5\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    // div 내용 추출\r\n\r\n    useEffect(() => {\r\n        console.log(value)\r\n        // if (value.nextPageID === false) {\r\n        // } else {\r\n            setId(value.nextPageID);\r\n            console.log(id);\r\n            setExtractedDiv(test.find((x, idx, array) => x.id === value.pageID).div);\r\n        // }\r\n    }, [value.pageID]);\r\n\r\n    return (\r\n        <>\r\n            <div className={`actionArea ${transitionToggle.background ? \"toggle\" : \"\"}`}>{extractedDiv}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActionArea;\r\n","\r\nimport Slider from \"react-slick\";\r\n\r\nconst ImageSlide = ({sliderArea, transitionToggle}) => {\r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n    return (\r\n\r\n        <>\r\n                <Slider ref={sliderArea} {...settings}>\r\n                    <div key={1}>\r\n                        <img src=\"./img/test_image.png\" style={{ width: \"100%\" }}></img>\r\n                        \r\n                    </div>\r\n                    <div key={2}>\r\n                        <img src=\"./img/test_image.png\" style={{ width: \"100%\" }}></img>\r\n                    </div>\r\n                    <div key={3}>\r\n                        <img src=\"./img/test_image.png\" style={{ width: \"100%\" }}></img>\r\n                    </div>\r\n                    <div key={4}>\r\n                        <img src=\"./img/test_image.png\" style={{ width: \"100%\" }}></img>\r\n                    </div>\r\n                    <div key={5}>\r\n                        <img src=\"./img/test_image.png\" style={{ width: \"100%\" }}></img>\r\n                    </div>\r\n                </Slider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageSlide","const pagesList = [\r\n    {\r\n        id: 1,\r\n        title: \"콘텐츠 소재 선택\",\r\n        body: \"어떤 내용으로 콘텐츠를 만들고 싶은지 선택해보세요.\\nwyd가 기획을 도와드릴께요.\",\r\n        success: \"이렇게 추가하시면 된답니다.\",\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"titleTest2\",\r\n        body: \"테스트바디2\",\r\n        success: \"\",\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"titleTest3\",\r\n        body: \"테스트 3번\",\r\n        success: \"\",\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"titleTest4\",\r\n        body: \"테스트 4번\",\r\n        success: \"\",\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"titleTest5\",\r\n        body: \"테스트 5번\",\r\n        success: \"\",\r\n    },\r\n];\r\nexport default pagesList","import { useEffect, useState } from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\nimport { useRef } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport qs from \"qs\";\r\nimport ActionArea from \"./ActionArea\";\r\nimport ImageSlide from \"./ImageSlide\";\r\nimport pagesList from './Pagelist' ;\r\n\r\nconst Tutorial = ({ history, location }) => {\r\n    const [num, setNum] = useState(0);\r\n    const [percent, setPercent] = useState(0);\r\n    const [transitionToggle, setTransitionToggle] = useState({\r\n        background: false,\r\n        alert: false,\r\n        congraturation: false,\r\n    });\r\n    let newPageNum = 0;\r\n    console.log(\"tutorial페이지로딩\")\r\n    const typelist = [\r\n        {\r\n            type: \"influencer\",\r\n            page: [1, 2, 3, 4],\r\n        },\r\n        {\r\n            type: \"dubbing\",\r\n            page: [1, 3, 5],\r\n        },\r\n        {\r\n            type: \"chobo\",\r\n            page: [1, 2, 3],\r\n        }\r\n    ];\r\n\r\n    let selectedPage;\r\n    let pages = [];\r\n\r\n    // url에서 선택한 type 받아옴\r\n    const query = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n    const userType = typelist.find((e) => e.type === query.type);\r\n\r\n    // function searchParam(key) {\r\n    //     return new URLSearchParams(location.search).get(key);\r\n    // }\r\n    // const userType = typelist.find((e) => e.type === searchParam('type'));\r\n    //type에 맞는 튜토리얼 골라서 배열에 등록\r\n    if (userType !== undefined) {\r\n        selectedPage = userType.page;\r\n        selectedPage.forEach((x, idx, array) => {\r\n            pages.push(pagesList.find((e) => e.id === x));\r\n        });\r\n        console.log(pages);\r\n    } else {\r\n        pages = pagesList;\r\n    }\r\n    console.log(pages)\r\n    // 표시될 Value 저장\r\n    const [value, setValue] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        bgImage: \"\",\r\n        fn: \"\",\r\n        pageNum: 0,\r\n        showPageNum: 1,\r\n        maxPageNum: pages.length,\r\n        percent: 0,\r\n        pageID: pages[0].id,\r\n        success: pages[0].success,\r\n        nextPageID: pages[1].id\r\n    });\r\n\r\n    // action을 취하는 경우\r\n    const handlechange = (e) => {\r\n        console.log(value)\r\n        setNum(num + 1);\r\n        setPercent((value.showPageNum * 100) / value.maxPageNum)\r\n\r\n\r\n\r\n        // setValue({\r\n        //     ...value,\r\n        //     percent: (value.showPageNum * 100) / value.maxPageNum,\r\n        //     // title: pages[num-1].title,\r\n        //     // body: pages[num-1].body\r\n        // });\r\n\r\n        // 배경화면 어둡게 한 것 제거\r\n        setTransitionToggle({\r\n            ...transitionToggle,\r\n            background: false,\r\n            alert: true,\r\n            congraturation: false,\r\n        });\r\n\r\n        // 0.5초 후 congraturation 표시\r\n        setTimeout(() => {\r\n            setTransitionToggle({\r\n                ...transitionToggle,\r\n                background: false,\r\n                alert: true,\r\n                congraturation: true,\r\n            });\r\n            if (value.showPageNum === value.maxPageNum) {\r\n                // setTimeout(() => {\r\n                    nextButton.current.innerText = \"완료\"\r\n                // }, 500);\r\n            }\r\n        }, 500);\r\n\r\n    };\r\n\r\n    const nextButtonClick = (e) => {\r\n        \r\n        // 튜토리얼 종료 여부 확인\r\n        if (value.showPageNum === value.maxPageNum) {\r\n            // setTimeout(() => {\r\n                let chkNewUser;\r\n                query.newUser === \"true\" ? chkNewUser = true : chkNewUser = false;\r\n                document.location.href = \"./end.html?newUser=\" + chkNewUser\r\n            // }, 500);\r\n        }\r\n\r\n        //종료가 아닌 경우\r\n        else {\r\n            // setTimeout(() => {\r\n                let nextPageID;\r\n                if (num+1 < pages.length) {\r\n                    \r\n                }\r\n                else {\r\n                    nextPageID = false\r\n                }\r\n                setTransitionToggle({\r\n                    ...transitionToggle,\r\n                    background: true,\r\n                    congraturation: false,\r\n                });\r\n                setValue({\r\n                    ...value,\r\n                    title: pages[num].title,\r\n                    body: pages[num].body,\r\n                    pageNum: num,\r\n                    showPageNum: num+1,\r\n                    percent: (value.showPageNum * 100) / value.maxPageNum,\r\n                    pageID: pages[num].id,\r\n                    nextPageID: nextPageID,\r\n                    success: pages[num].success,\r\n                });\r\n                sliderArea.current.slickNext();\r\n                console.log(value);\r\n            // }, 3000);\r\n        }\r\n    }\r\n    // 페이지별 들어가야할 내용 정리\r\n\r\n    const sliderArea = useRef();\r\n    const nextButton = useRef();\r\n    const firework = <div className=\"after\"></div>;\r\n\r\n// 로딩 시 어둡게 + 알럿바 표시\r\n    useEffect(() => {\r\n        setTransitionToggle({\r\n            ...transitionToggle,\r\n            background: true,\r\n            alert: true,\r\n        });\r\n        setValue({\r\n            ...value,\r\n            title: pages[0].title,\r\n            body: pages[0].body,\r\n            success: pages[0].success,\r\n\r\n        });\r\n        console.log(value)\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"image_wrap\">\r\n                <ImageSlide sliderArea={sliderArea} transitionToggle={transitionToggle} />\r\n                <ActionArea handlechange={handlechange} transitionToggle={transitionToggle} value={value} />\r\n            </div>\r\n\r\n            <div className={`dim ${transitionToggle.background ? \"toggle\" : \"\"}`}></div>\r\n\r\n            <div className={`alert ${transitionToggle.alert ? \"alerttoggle\" : \"\"}`}>\r\n                <div className={`congraturation ${transitionToggle.congraturation ? \"congraturationToggle\" : \"\"}`}>\r\n                    <span className=\"title\"> {transitionToggle.congraturation ? `${value.title} 완료` : \"\"}</span>\r\n                    <span className=\"body\">{transitionToggle.congraturation ? `${value.success}` : \"\"}</span>\r\n                    {transitionToggle.congraturation ?<button type=\"button\" onClick={nextButtonClick} ref={nextButton}>다음</button>:\"\"}\r\n                    \r\n                    {transitionToggle.congraturation ? firework : \"\"}\r\n                </div>\r\n                <div className=\"title\">\r\n                    {value.title} ({value.pageNum + 1}/{value.maxPageNum})\r\n                </div>\r\n                <div className=\"progressBar-root\">\r\n                    <div className=\"progressBar\" style={{ backgroundColor: \"rgb(0,115,240)\", transform: `translateX(${-100 + percent}%)`, transition: \"all 0.3s ease-in-out\" }}></div>\r\n                </div>\r\n                <div className=\"body\">\r\n                    {value.body.split(\"\\n\").map((line) => {\r\n                        return (\r\n                            <span>\r\n                                {line}\r\n                                <br />\r\n                            </span>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tutorial;\r\n","import './App.css';\nimport { Route } from 'react-router-dom';\nimport Tutorial from './Tutorial';\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Route path=\"/\" component={Tutorial} />\n      {/* <Tutorial /> */}\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n\n        <BrowserRouter>\n            <App />\n        </ BrowserRouter>\n,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}